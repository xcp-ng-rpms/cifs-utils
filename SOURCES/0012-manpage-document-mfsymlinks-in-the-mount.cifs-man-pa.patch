From d020fbf352ec9c2c4cfd66b8bd1b956e5e8ed9fb Mon Sep 17 00:00:00 2001
From: Sachin Prabhu <sprabhu@redhat.com>
Date: Wed, 4 Jan 2017 07:45:17 -0500
Subject: [PATCH 12/12] manpage: document mfsymlinks in the mount.cifs man page

Information from the cifs README in the kernel sources is used.

Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
(cherry picked from commit d73a52e50d43f07638f34cb860e9824a932508b8)

Resolves bz: 1252725

Signed-off-by: Sachin Prabhu <sprabhu@redhat.com>
---
 mount.cifs.8 | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/mount.cifs.8 b/mount.cifs.8
index af6b097..01579f6 100644
--- a/mount.cifs.8
+++ b/mount.cifs.8
@@ -450,6 +450,11 @@ sfu
 When the CIFS Unix Extensions are not negotiated, attempt to create device files and fifos in a format compatible with Services for Unix (SFU)\&. In addition retrieve bits 10\-12 of the mode via the SETFILEBITS extended attribute (as SFU does)\&. In the future the bottom 9 bits of the mode mode also will be emulated using queries of the security descriptor (ACL)\&. [NB: requires version 1\&.39 or later of the CIFS VFS\&. To recognize symlinks and be able to create symlinks in an SFU interoperable form requires version 1\&.40 or later of the CIFS VFS kernel module\&.
 .RE
 .PP
+mfsymlinks
+.RS 4
+Enable support for Minshall+French symlinks(see http://wiki.samba.org/index.php/UNIX_Extensions#Minshall.2BFrench_symlinks). This option is ignored when specified together with the 'sfu' option. Minshall+French symlinks are used even if the server supports the CIFS Unix Extensions.
+.RE
+.PP
 serverino
 .RS 4
 Use inode numbers (unique persistent file identifiers) returned by the server instead of automatically generating temporary inode numbers on the client\&. Although server inode numbers make it easier to spot hardlinked files (as they will have the same inode numbers) and inode numbers may be persistent (which is userful for some sofware), the server does not guarantee that the inode numbers are unique if multiple server side mounts are exported under a single share (since inode numbers on the servers might not be unique if multiple filesystems are mounted under the same shared higher level directory)\&. Note that not all servers support returning server inode numbers, although those that support the CIFS Unix Extensions, and Windows 2000 and later servers typically do support this (although not necessarily on every local server filesystem)\&. Parameter has no effect if the server lacks support for returning inode numbers or equivalent\&. This behavior is enabled by default\&.
-- 
2.9.3

